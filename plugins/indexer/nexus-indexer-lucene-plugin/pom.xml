<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-2015 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.nexus.plugins</groupId>
    <artifactId>nexus-plugins-indexer</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>nexus-indexer-lucene-plugin</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>bundle</packaging>

  <properties>
    <pluginDescription>Adds search capabilities for repository content.</pluginDescription>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven.indexer</groupId>
      <artifactId>indexer-artifact</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.indexer</groupId>
      <artifactId>indexer-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-plugin-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.plugins</groupId>
      <artifactId>nexus-maven-bridge-plugin</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.plugins</groupId>
      <artifactId>nexus-extdirect-plugin</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-test-common</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.http-testing-harness</groupId>
      <artifactId>junit-runner</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <id>mvn-coordinates</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                project.artifactMap.each{k,v->
                  // add 'mvn:artifactId' properties representing Pax-URL path for each transitive artifact
                  project.properties['mvn:'+v.artifactId]='mvn:'+v.groupId+'/'+v.artifactId+'/'+v.version
                }
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>plugin-feature</id>
            <goals>
              <goal>features-generate-descriptor</goal>
            </goals>
            <configuration>
              <!--
              Lucene needs special wrapping
              -->
              <inputFile>${project.basedir}/src/main/feature/feature.xml</inputFile>
              <excludedArtifactIds combine.children="append">
                <id>lucene-core</id>
                <id>lucene-queries</id>
              </excludedArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
